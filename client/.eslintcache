[{"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Login.js":"1","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\index.js":"2","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Search.js":"3","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Home.js":"4","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Register.js":"5","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\App.js":"6","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\reportWebVitals.js":"7","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\UpdateCustomer.js":"8","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Item.js":"9"},{"size":3310,"mtime":1624279124855,"results":"10","hashOfConfig":"11"},{"size":500,"mtime":1606727097000,"results":"12","hashOfConfig":"11"},{"size":2105,"mtime":1624279162682,"results":"13","hashOfConfig":"11"},{"size":10418,"mtime":1624346764499,"results":"14","hashOfConfig":"11"},{"size":4236,"mtime":1615285622477,"results":"15","hashOfConfig":"11"},{"size":820,"mtime":1623823053614,"results":"16","hashOfConfig":"11"},{"size":362,"mtime":1606727097000,"results":"17","hashOfConfig":"11"},{"size":3910,"mtime":1624010393302,"results":"18","hashOfConfig":"11"},{"size":3004,"mtime":1624347243450,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"17t1vv4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Login.js",["40"],"\r\nimport React, { Component } from 'react';\r\nimport H from '../css/Home.module.css';\r\nimport R from '../css/Register.module.css';\r\nimport queryString from \"query-string\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        inputId: '',\r\n        inputPs: '',\r\n        loginCheck: []\r\n    }\r\n    componentDidMount(){\r\n    this.getQueryString();\r\n    }\r\n\r\n    getQueryString = () => {\r\n        const result = queryString.parse(this.props.location.search);\r\n        const rst = result.ReturnUrl;\r\n        \r\n       return rst;\r\n\r\n    }\r\n    loginCancel = () => {\r\n        var page = this.getQueryString();\r\n        document.location.href = page;\r\n    }\r\n    loginApprove = async () => {\r\n        const options = {\r\n            method: \"post\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    \r\n        const { inputId, inputPs } = this.state;\r\n        if (inputId === '') {\r\n            alert(\"ID를 입력해주세요\");\r\n        }\r\n        else if (inputPs === '') {\r\n            alert(\"패스워드를 입력해주세요\");\r\n        }\r\n        else if (inputId !== '' && inputPs !== '') {\r\n            await fetch('/login', options)\r\n                .then(response => response.json())\r\n                .then(response => this.setState({ loginCheck: response }))\r\n        }\r\n        const { loginCheck } = this.state;\r\n        if (loginCheck.success === 'true') {\r\n            alert(\"로그인이 되었습니다.\");\r\n            var page = this.getQueryString();\r\n            document.location.href=page;\r\n        }\r\n        else if (loginCheck.success === 'false') {\r\n            alert(\"로그인 정보가 일치하지 않습니다\");\r\n\r\n        }\r\n    }\r\n\r\n\r\n    enterCheck = (event) => {\r\n        if (event.keyCode === 13) {\r\n            this.loginApprove();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={H.header}>\r\n                    <div className={H.inner}>\r\n                        <div className={H.logo}>\r\n                            <div className={H.logo_text}>수산마켓</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={R.body_wrap}>\r\n                    <h1>로그인</h1>\r\n                    <ul>\r\n                        <li><div className={R.label_text}>아이디</div>\r\n                            <input className={R.text_field} type=\"text\" onChange={e => this.setState({ inputId: e.target.value })} />\r\n                        </li>\r\n                        <li><div className={R.label_text}>패스워드</div>\r\n                            <input className={R.text_field} type=\"password\"  onKeyUp={this.enterCheck} onChange={e => this.setState({ inputPs: e.target.value })} />\r\n\r\n                        </li>\r\n                        <li><div className={R.btn_box}>\r\n                            <input type=\"button\" value=\"로그인\" onClick={this.loginApprove} className={R.btn_submit} /> <a className={R.btn_cancel} onClick={this.loginCancel}>취소</a>\r\n                        </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\index.js",[],["41","42"],"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Search.js",[],"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Home.js",["43","44","45","46","47"],"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Register.js",[],"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\UpdateCustomer.js",[],"C:\\Users\\Lenovo\\Desktop\\개발물\\ShoppingMall\\client\\src\\components\\Item.js",[],{"ruleId":"48","severity":1,"message":"49","line":91,"column":118,"nodeType":"50","endLine":91,"endColumn":173},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":65,"column":29,"nodeType":"50","endLine":65,"endColumn":91},{"ruleId":"48","severity":1,"message":"49","line":65,"column":29,"nodeType":"50","endLine":65,"endColumn":91},{"ruleId":"48","severity":1,"message":"49","line":70,"column":33,"nodeType":"50","endLine":70,"endColumn":73},{"ruleId":"48","severity":1,"message":"49","line":81,"column":69,"nodeType":"50","endLine":81,"endColumn":97},{"ruleId":"48","severity":1,"message":"49","line":250,"column":53,"nodeType":"50","endLine":250,"endColumn":93},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]